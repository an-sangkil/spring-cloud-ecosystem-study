plugins {
    id 'org.springframework.boot' version '2.6.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "org.asciidoctor.convert" version "1.5.8"
    id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

ext {
    // 변수 설정
    set('springCloudVersion', "2021.0.0")
    set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

    asciidoctor 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

asciidoctor {
    inputs.dir snippetsDir
    dependsOn test
}

task copyAsciidoctor(type: Copy) {
    dependsOn asciidoctor
    from "${asciidoctor.outputDir}/html5"
    into file("src/main/resources/static/docs")
    //into "${sourceSets.main.output.resourcesDir}/static/docs"
}

bootJar {
    dependsOn asciidoctor
    from ("${asciidoctor.outputDir}/html5") {
        into "static/docs"
    }

    String buildNumber
    if(project.hasProperty('buildNumber')){
        buildNumber = project.getProperty('buildNumber')
        filesMatching("**/*.properties") {
            expand( buildNumber: project.getProperty('buildNumber') )
        }
        archiveFileName = "${archiveBaseName.get()}-${buildNumber}.${archiveExtension.get()}"
    } else {
        archiveFileName = "${archiveBaseName.get()}-.${archiveExtension.get()}"
    }

    doLast {
        if(project.hasProperty('buildNumber')){
            println "번호 : " + buildNumber
        }
    }
}

build {
    dependsOn(copyAsciidoctor)
}

jar.enabled(false)